[build-system]
requires = ["setuptools_scm[toml] >= 6.2", "setuptools-generate"]
build-backend = "setuptools.build_meta"

[project]
name = "translate-shell"
description = "Translate text by google, bing, youdaozhiyun, haici, stardict, etc at same time from CLI, GUI (GNU/Linux, Android, macOS and Windows), REPL, python, shell and vim."
authors = [{ name = "Wu Zhenyu", email = "wuzhenyu@ustc.edu" }]
readme = "README.md"
requires-python = ">= 3.7"
keywords = ["translate"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version", "optional-dependencies"]

[project.license]
text = "GPL v3"

[project.urls]
Homepage = "https://translate-shell.readthedocs.org"
Download = "https://github.com/Freed-Wu/translate-shell/releases"
"Bug Report" = "https://github.com/Freed-Wu/translate-shell/issues"
Source = "https://github.com/Freed-Wu/translate-shell"

[project.scripts]
trans = "translate_shell.__main__:main"

[tool.setuptools_scm]
write_to = "src/translate_shell/_version.py"

[tool.setuptools-generate]
write-to = "src/translate_shell/_metainfo.py"

[tool.setuptools-generate.metainfo-template]
file = "templates/metainfo.py.j2"

# begin: scripts/update-pyproject.toml.pl
[tool.setuptools.dynamic.optional-dependencies.color]
file = "requirements/color.txt"

[tool.setuptools.dynamic.optional-dependencies.dev]
file = "requirements/dev.txt"

[tool.setuptools.dynamic.optional-dependencies.keyring]
file = "requirements/keyring.txt"

[tool.setuptools.dynamic.optional-dependencies.langdetect]
file = "requirements/langdetect.txt"

[tool.setuptools.dynamic.optional-dependencies.notification]
file = "requirements/notification.txt"

[tool.setuptools.dynamic.optional-dependencies.rich]
file = "requirements/rich.txt"

[tool.setuptools.dynamic.optional-dependencies.stardict]
file = "requirements/stardict.txt"

[tool.setuptools.dynamic.optional-dependencies.wakatime]
file = "requirements/wakatime.txt"

[tool.setuptools.dynamic.optional-dependencies.yaml]
file = "requirements/yaml.txt"
# end: scripts/update-pyproject.toml.pl

[tool.black]
line-length = 79

[tool.isort]
line_length = 79
profile = "black"

[tool.pydocstyle]
add_ignore = "D205, D400"

[tool.bandit]
skips = ["B310", "B404", "B603"]

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

[tool.codespell]
ignore-words-list = "fo, nd, te"

[tool.pyright]
exclude = ["templates/__init__.py"]

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "\\s*import tomli as tomllib",
]

[tool.doq]
template_path = "templates"
