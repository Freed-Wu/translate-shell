# Requirements

## completion

Generate shell completion scripts.

```{eval-sh}
cat requirements/completion.txt | perl -pe's/\s*#.*\n//g;s=(\S+)=- [\1](https://pypi.org/project/\1)=g'
```

## color

Provide a prompt/output style like
[powerlevel10k](https://github.com/romkatv/powerlevel10k).
See [prompt](resources/config.md#prompt) and
[process output](resources/config.md#process-output).

```{eval-sh}
cat requirements/color.txt | perl -pe's/\s*#.*\n//g;s=(\S+)=- [\1](https://pypi.org/project/\1)=g'
```

## stardict

Support translate offline by stardict.

```{eval-sh}
cat requirements/stardict.txt | perl -pe's/\s*#.*\n//g;s=(\S+)=- [\1](https://pypi.org/project/\1)=g'
```

## langdetect

Language detect automatically.

```{eval-sh}
cat requirements/langdetect.txt | perl -pe's/\s*#.*\n//g;s=(\S+)=- [\1](https://pypi.org/project/\1)=g'
```

## yaml

For `trans --format yaml`:

```{eval-sh}
cat requirements/yaml.txt | perl -pe's/\s*#.*\n//g;s=(\S+)=- [\1](https://pypi.org/project/\1)=g'
```

## keyring

See [resources/config.md#secret].

```{eval-sh}
cat requirements/keyring.txt | perl -pe's/\s*#.*\n//g;s=(\S+)=- [\1](https://pypi.org/project/\1)=g'
```

## rich

See [resources/config.md#logger].

```{eval-sh}
cat requirements/rich.txt | perl -pe's/\s*#.*\n//g;s=(\S+)=- [\1](https://pypi.org/project/\1)=g'
```

## dev

For unit test and code coverage rate test. See [development](resources/development.md#test)

```{eval-sh}
cat requirements/dev.txt | perl -pe's/\s*#.*\n//g;s=(\S+)=- [\1](https://pypi.org/project/\1)=g'
```
